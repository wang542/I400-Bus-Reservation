package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Button;

import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ComboBox;

import javafx.scene.control.RadioButton;
import javafx.scene.control.TextField;
import javafx.scene.control.DatePicker;

public class BusReservationController {
	@FXML
	private AnchorPane mainPane;
	@FXML
	private RadioButton bloomingtonRadio;
	@FXML
	private ToggleGroup placeGroup;
	@FXML
	private RadioButton indyRadio;
	@FXML
	private DatePicker travelDate;
	@FXML
	private ComboBox timeCombo;
	@FXML
	private ComboBox locationCombo;
	@FXML
	private Button clearButton;
	@FXML
	private Button proceedButton;
	@FXML
	private Label messageLabel;
	@FXML
	private TextField nameField;
	//Trie to limit opening confirmation page by checking if stage is null, not working
	@FXML
	private Stage dialogStage;
	
	private ConfirmationPageController confirmationcontroller;

	private ArrayList<String> indyPickup = new ArrayList<String>(Arrays.asList("Campus Center", " State House"));

	private ArrayList<String> bloomingtonPickup = new ArrayList<String>(Arrays.asList("IMU", "Stadium Parking"));

	private ArrayList<String> bloomingtonTime = new ArrayList<String>(
			Arrays.asList("6:30 am", "9:45 am", "1:30 pm", "4:45 pm"));

	private ArrayList<String> indyTime = new ArrayList<String>(
			Arrays.asList("8:15 am", "11:15 am", "3:15 pm", "6:15 pm"));
	
	//initiate a counter to use for limiting to opening confirmation page only once
	int counter=0;
	String travellingTo = "";
	String date = "";
	String pickUpLocation = "";
	String time = "";
	String name = "";

	@FXML
	public void bloomingtonSelected(ActionEvent event) {
		ObservableList<String> obTime = FXCollections.observableArrayList(indyTime);
		ObservableList<String> obLocation = FXCollections.observableArrayList(indyPickup);
		timeCombo.setItems(obTime);
		locationCombo.setItems(obLocation);
	}

	@FXML
	public void indySelected(ActionEvent event) {
		ObservableList<String> obTime = FXCollections.observableArrayList(bloomingtonTime);
		ObservableList<String> obLocation = FXCollections.observableArrayList(bloomingtonPickup);
		timeCombo.setItems(obTime);
		locationCombo.setItems(obLocation);
	}

	// Event Listener on Button[#clearButton].onAction
	@FXML
	public void clearButtonClicked(ActionEvent event) {
		// TODO Autogenerated
		bloomingtonRadio.setSelected(false);
		indyRadio.setSelected(false);
		travelDate.setValue(null);
		timeCombo.setItems(null);
		locationCombo.setItems(null);
		nameField.setText("");
	}

	// Event Listener on Button[#proceedButton].onAction
	@FXML
	public void proceedButtonClicked(ActionEvent event) {
		// TODO Autogenerated
		if (bloomingtonRadio.isSelected()) {
			travellingTo = "Bloomington";
		}
		if (indyRadio.isSelected()) {
			travellingTo = "Indianapolis";
		}
		date = travelDate.getValue().toString();
		time = timeCombo.getValue().toString();
		pickUpLocation = locationCombo.getValue().toString();
		name = nameField.getText();
		
		//only open the new window when counter is 0
		if (counter==0) {
		FXMLLoader loader = new FXMLLoader(getClass().getResource("/ConfirmationPage.fxml"));
		AnchorPane dialogRoot;
		// setting the stage, creating a controller object and loading the window
		try {
			dialogRoot = (AnchorPane) loader.load();
			Scene dialogScene = new Scene(dialogRoot);
			Stage dialogStage = new Stage();
			dialogStage.setScene(dialogScene);
			ConfirmationPageController summaryController = (ConfirmationPageController) loader.getController();
			
			// Write Code to pass travel summary details to Confirmation page
			//Use setters to set value for each label in OrderConfirmation page
			summaryController.setName(name);
			summaryController.setDestination("Destination: "+travellingTo);
			summaryController.setTravelDate("Travel Date: "+date);
			summaryController.setPickuptime("Pick Up Time: "+time);
			summaryController.setPickuplocation("Pick Up Location: "+pickUpLocation);
			// passing the controller to OrderSummary GUI
			summaryController.setCallingController(this);
			dialogStage.show();
			System.out.println("After dialogStage.show(), reservation summary window opened");
			
			//Set the counter to any number other than 0, here i set it to 1
			//if counter is not 0, new window will not open
			
			counter=1;
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		}
		
		
	}
	
	//clear method for clearing the fields in BusReservation Page
	public void clearOrder() {
		bloomingtonRadio.setSelected(false);
		indyRadio.setSelected(false);
		nameField.clear();
		travelDate.setValue(null);
		timeCombo.setValue("");
		locationCombo.setValue("");
	
		
	}
}
